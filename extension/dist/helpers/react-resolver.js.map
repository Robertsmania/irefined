{"version":3,"file":"react-resolver.js","sources":["../../src/helpers/react-resolver.js"],"sourcesContent":["export function findReact(el, parent = 0, type = 'props') {\r\n    if (!el) {\r\n        return null;\r\n    }\r\n    const reactInternal = Object.keys(el).find(key => key.startsWith('__reactInternalInstance'));\r\n\r\n    el = el[reactInternal];\r\n\r\n    let found = [];\r\n\r\n    while (found.length <= parent) {\r\n\r\n        if (\"stateNode\" in el && el.stateNode && type in el.stateNode) {\r\n            found.push(el.stateNode);\r\n        }\r\n\r\n        if (\"return\" in el && el.return) {\r\n            el = el.return;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return found[parent] || null;\r\n}\r\n\r\nexport function findState(el, parent = 0) {\r\n    return findReact(el, parent, 'state').state;\r\n}\r\n\r\nexport function findProps(el, parent = 0) {\r\n    return findReact(el, parent).props;\r\n}"],"names":["findReact","el","parent","type","reactInternal","key","found","findState","findProps"],"mappings":"AAAO,SAASA,EAAUC,GAAIC,IAAS,GAAGC,IAAO,SAAS;AACtD,MAAI,CAACF;AACD,WAAO;AAEX,QAAMG,IAAgB,OAAO,KAAKH,CAAE,EAAE,KAAK,CAAAI,MAAOA,EAAI,WAAW,yBAAyB,CAAC;AAE3F,EAAAJ,IAAKA,EAAGG,CAAa;AAErB,MAAIE,IAAQ,CAAA;AAEZ,SAAOA,EAAM,UAAUJ,MAEf,eAAeD,KAAMA,EAAG,aAAaE,KAAQF,EAAG,aAChDK,EAAM,KAAKL,EAAG,SAAS,GAGvB,YAAYA,KAAMA,EAAG;AACrB,IAAAA,IAAKA,EAAG;AAMhB,SAAOK,EAAMJ,CAAM,KAAK;AAC5B;AAEO,SAASK,EAAUN,GAAIC,IAAS,GAAG;AACtC,SAAOF,EAAUC,GAAIC,GAAQ,OAAO,EAAE;AAC1C;AAEO,SAASM,EAAUP,GAAIC,IAAS,GAAG;AACtC,SAAOF,EAAUC,GAAIC,CAAM,EAAE;AACjC;"}