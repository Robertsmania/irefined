import { svgTagNames as d } from "../svg-tag-names/index.js";
const a = new Set(d);
a.delete("a");
a.delete("audio");
a.delete("canvas");
a.delete("iframe");
a.delete("script");
a.delete("video");
const u = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, m = (e) => e === DocumentFragment, g = (e, s) => {
  for (const [t, o] of Object.entries(s))
    t.startsWith("-") ? e.style.setProperty(t, o) : typeof o == "number" && !u.test(t) ? e.style[t] = `${o}px` : e.style[t] = o;
}, h = (e) => typeof e == "string" ? a.has(e) ? document.createElementNS("http://www.w3.org/2000/svg", e) : document.createElement(e) : m(e) ? document.createDocumentFragment() : e(e.defaultProps), c = (e, s, t) => {
  t != null && (/^xlink[AHRST]/.test(s) ? e.setAttributeNS("http://www.w3.org/1999/xlink", s.replace("xlink", "xlink:").toLowerCase(), t) : e.setAttribute(s, t));
}, f = (e, s) => {
  for (const t of s)
    t instanceof Node ? e.appendChild(t) : Array.isArray(t) ? f(e, t) : typeof t != "boolean" && typeof t < "u" && t !== null && e.appendChild(document.createTextNode(t));
}, p = /* @__PURE__ */ new Set([
  // These attributes allow "false" as a valid value
  "contentEditable",
  "draggable",
  "spellCheck",
  "value",
  // SVG-specific
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha"
]), w = (e, s, ...t) => {
  var o;
  const r = h(e);
  if (f(r, t), r instanceof DocumentFragment || !s)
    return r;
  for (let [n, i] of Object.entries(s))
    if (n === "htmlFor" && (n = "for"), n === "class" || n === "className") {
      const l = (o = r.getAttribute("class")) !== null && o !== void 0 ? o : "";
      c(r, "class", (l + " " + String(i)).trim());
    } else if (n === "style")
      g(r, i);
    else if (n.startsWith("on")) {
      const l = n.slice(2).toLowerCase().replace(/^-/, "");
      r.addEventListener(l, i);
    } else n === "dangerouslySetInnerHTML" && "__html" in i ? r.innerHTML = i.__html : n !== "key" && (p.has(n) || i !== !1) && c(r, n, i === !0 ? "" : i);
  return r;
}, b = typeof DocumentFragment == "function" ? DocumentFragment : () => {
}, N = {
  createElement: w,
  Fragment: b
};
export {
  b as Fragment,
  N as default,
  w as h
};
//# sourceMappingURL=index.js.map
