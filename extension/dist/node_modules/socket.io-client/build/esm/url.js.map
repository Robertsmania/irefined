{"version":3,"file":"url.js","sources":["../../../../../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["url","uri","path","loc","obj","parse","host"],"mappings":";;;;;;;;;;AAUO,SAASA,EAAIC,GAAKC,IAAO,IAAIC,GAAK;AACrC,MAAIC,IAAMH;AAEV,EAAAE,IAAMA,KAAQ,OAAO,WAAa,OAAe,UACrCF,KAAR,SACAA,IAAME,EAAI,WAAW,OAAOA,EAAI,OAEhC,OAAOF,KAAQ,aACHA,EAAI,OAAO,CAAC,MAApB,QACYA,EAAI,OAAO,CAAC,MAApB,MACAA,IAAME,EAAI,WAAWF,IAGrBA,IAAME,EAAI,OAAOF,IAGpB,sBAAsB,KAAKA,CAAG,MACX,OAAOE,IAAvB,MACAF,IAAME,EAAI,WAAW,OAAOF,IAG5BA,IAAM,aAAaA,IAI3BG,IAAMC,EAAMJ,CAAG,IAGdG,EAAI,SACD,cAAc,KAAKA,EAAI,QAAQ,IAC/BA,EAAI,OAAO,OAEN,eAAe,KAAKA,EAAI,QAAQ,MACrCA,EAAI,OAAO,SAGnBA,EAAI,OAAOA,EAAI,QAAQ;AAEvB,QAAME,IADOF,EAAI,KAAK,QAAQ,GAAG,MAAM,KACnB,MAAMA,EAAI,OAAO,MAAMA,EAAI;AAE/C,SAAAA,EAAI,KAAKA,EAAI,WAAW,QAAQE,IAAO,MAAMF,EAAI,OAAOF,GAExDE,EAAI,OACAA,EAAI,WACA,QACAE,KACCH,KAAOA,EAAI,SAASC,EAAI,OAAO,KAAK,MAAMA,EAAI,OAChDA;AACX;","x_google_ignoreList":[0]}